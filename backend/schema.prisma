generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "node node_modules/prisma-nestjs-graphql"
  output   = "./src/@generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model album {
  id                   Int            @id @default(autoincrement())
  album_name           String?        @db.VarChar(50)
  album_prompt         String?        @db.VarChar(50)
  album_art_url        String?        @db.VarChar(50)
  total_desired_tracks Int?
  track                track[]
  users_tracks         users_tracks[]
}

model track {
  id                Int            @id @default(autoincrement())
  track_name        String?        @db.VarChar(50)
  track_description String?        @db.VarChar(50)
  created_at        DateTime?      @default(now()) @db.DateTime(0)
  uploaded_at       DateTime?      @db.DateTime(0)
  is_uploaded       Boolean?       @default(false)
  wav_file_path     String?        @db.VarChar(50)
  is_processed      Boolean?       @default(false)
  mp3_file_path     String?        @db.VarChar(50)
  album_id          Int
  album             album          @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "track_ibfk_1")
  users_tracks      users_tracks[]

  @@index([album_id], map: "album_id")
}

model user {
  id         Int       @id @default(autoincrement())
  user_name  String?   @db.VarChar(50)
  is_admin   Boolean?  @default(false)
  insta      String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.DateTime(0)
}

model users_tracks {
  id                  Int     @id @default(autoincrement())
  track_id            Int?
  album_id            Int
  stream_service_name String? @default("Various Artists") @db.VarChar(50)
  track               track?  @relation(fields: [track_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "users_tracks_ibfk_1")
  album               album   @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "users_tracks_ibfk_2")

  @@index([album_id], map: "album_id")
  @@index([track_id], map: "track_id")
}
