generator client {
  provider = "prisma-client-js"
}

generator graphql_schema {
  provider   = "graphql-schema-generator"
  output     = "../"
  createCRUD = "false"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Album {
  id                   Int            @id @default(autoincrement())
  album_name           String?        @db.VarChar(50)
  album_prompt         String?        @db.VarChar(50)
  album_art_url        String?        @db.VarChar(50)
  total_desired_tracks Int?
  Users_tracks         Users_tracks[]
}

model Track {
  id                Int            @id @default(autoincrement())
  track_name        String?        @db.VarChar(50)
  track_description String?        @db.VarChar(50)
  created_at        DateTime?      @default(now()) @db.DateTime(0)
  uploaded_at       DateTime?      @db.DateTime(0)
  is_uploaded       Boolean?       @default(false)
  wav_file_path     String?        @db.VarChar(50)
  is_processed      Boolean?       @default(false)
  mp3_file_path     String?        @db.VarChar(50)
  Users_tracks      Users_tracks[]
}

model User {
  id           Int            @id @default(autoincrement())
  user_name    String?        @db.VarChar(50)
  is_admin     Boolean?       @default(false)
  insta        String?        @db.VarChar(50)
  created_at   DateTime?      @default(now()) @db.DateTime(0)
  Users_tracks Users_tracks[]
}

model Users_tracks {
  id                  Int     @id @default(autoincrement())
  user_id             Int?
  track_id            Int?
  album_id            Int
  stream_service_name String? @default("Various Artists") @db.VarChar(50)
  User                User?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_tracks_ibfk_1")
  Track               Track?  @relation(fields: [track_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_tracks_ibfk_2")
  Album               Album   @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_tracks_ibfk_3")

  @@index([album_id], map: "album_id")
  @@index([track_id], map: "track_id")
  @@index([user_id], map: "user_id")
}
